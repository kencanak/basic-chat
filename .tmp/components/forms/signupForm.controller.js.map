{"version":3,"sources":["../../../client/components/forms/signupForm.controller.js"],"names":[],"mappings":"AAAA;;;;;;IAEM,oB;;;AAOJ,gCAAY,IAAZ,EAAkB,MAAlB,EAA0B,UAA1B,EAAsC,QAAtC,EAAgD;AAAA;;AAAA,SALhD,IAKgD,GALzC,EAKyC;AAAA,SAJhD,MAIgD,GAJvC,EAIuC;AAAA,SAHhD,SAGgD,GAHpC,KAGoC;;AAC9C,SAAK,IAAL,GAAY,IAAZ;AACA,SAAK,MAAL,GAAc,MAAd;AACA,SAAK,UAAL,GAAkB,UAAlB;AACA,SAAK,QAAL,GAAgB,QAAhB;AACD;;;;;;6BAEQ,I,EAAM;AAAA;;AACb,WAAK,SAAL,GAAiB,IAAjB;;AAEA,UAAI,KAAK,MAAT,EAAiB;AACf,aAAK,IAAL,CAAU,UAAV,CAAqB;AACnB,gBAAM,KAAK,IAAL,CAAU,IADG;AAEnB,oBAAU,KAAK,IAAL,CAAU,QAFD;AAGnB,oBAAU,KAAK,IAAL,CAAU;AAHD,SAArB,EAKC,IALD,CAKM,YAAM;;AAEV,cAAI,YAAJ;AACA,gBAAK,QAAL,CAAc,YAAU;AACpB,iBAAK,UAAL,CAAgB,UAAhB,CAA2B,eAA3B;AACH,WAFD,EAEE,GAFF;AAGA,gBAAK,MAAL,CAAY,EAAZ,CAAe,UAAf;AACD,SAZD,EAaC,KAbD,CAaO,eAAO;AACZ,gBAAM,IAAI,IAAV;AACA,gBAAK,MAAL,GAAc,EAAd;;;AAGA,kBAAQ,OAAR,CAAgB,IAAI,MAApB,EAA4B,UAAC,KAAD,EAAQ,KAAR,EAAkB;AAC5C,iBAAK,KAAL,EAAY,YAAZ,CAAyB,UAAzB,EAAqC,KAArC;;AAEA,kBAAK,MAAL,CAAY,KAAZ,IAAqB,MAAM,OAA3B;AACD,WAJD;AAKD,SAvBD;AAwBD;AACF;;;;;;AAGH,QAAQ,MAAR,CAAe,SAAf,EACG,UADH,CACc,sBADd,EACsC,oBADtC","file":"signupForm.controller.js","sourcesContent":["'use strict';\n\nclass SignupFormController {\n  //start-non-standard\n  user = {};\n  errors = {};\n  submitted = false;\n  //end-non-standard\n\n  constructor(Auth, $state, $rootScope, $timeout) {\n    this.Auth = Auth;\n    this.$state = $state;\n    this.$rootScope = $rootScope;\n    this.$timeout = $timeout;\n  }\n\n  register(form) {\n    this.submitted = true;\n\n    if (form.$valid) {\n      this.Auth.createUser({\n        name: this.user.name,\n        userName: this.user.userName,\n        password: this.user.password\n      })\n      .then(() => {\n        // Account created, redirect to home\n        var self = this;\n        this.$timeout(function(){\n            self.$rootScope.$broadcast('authenticated');\n        },100);\n        this.$state.go('chatRoom');\n      })\n      .catch(err => {\n        err = err.data;\n        this.errors = {};\n\n        // Update validity of form fields that match the mongoose errors\n        angular.forEach(err.errors, (error, field) => {\n          form[field].$setValidity('mongoose', false);\n\n          this.errors[field] = error.message;\n        });\n      });\n    }\n  }\n}\n\nangular.module('chatApp')\n  .controller('SignupFormController', SignupFormController);\n"]}