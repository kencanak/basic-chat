{"version":3,"sources":["../../../client/components/auth/interceptor.service.js"],"names":[],"mappings":"AAAA;;AAEA,CAAC,YAAW;;AAEZ,WAAS,eAAT,CAAyB,UAAzB,EAAqC,EAArC,EAAyC,QAAzC,EAAmD,SAAnD,EAA8D,IAA9D,EAAoE;AAClE,QAAI,KAAJ;AACA,WAAO;;;AAEL,aAFK,mBAEG,MAFH,EAEW;AACd,eAAO,OAAP,GAAiB,OAAO,OAAP,IAAkB,EAAnC;AACA,YAAI,SAAS,GAAT,CAAa,OAAb,KAAyB,KAAK,YAAL,CAAkB,OAAO,GAAzB,CAA7B,EAA4D;AAC1D,iBAAO,OAAP,CAAe,aAAf,GAA+B,YAAY,SAAS,GAAT,CAAa,OAAb,CAA3C;AACD;AACD,eAAO,MAAP;AACD,OARI;;;;AAWL,mBAXK,yBAWS,QAXT,EAWmB;AACtB,YAAI,SAAS,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,WAAC,UAAU,QAAQ,UAAU,GAAV,CAAc,QAAd,CAAlB,CAAD,EAA6C,EAA7C,CAAgD,MAAhD;;AAEA,mBAAS,MAAT,CAAgB,OAAhB;AACD;AACD,eAAO,GAAG,MAAH,CAAU,QAAV,CAAP;AACD;AAlBI,KAAP;AAoBD;;AAED,UAAQ,MAAR,CAAe,cAAf,EACG,OADH,CACW,iBADX,EAC8B,eAD9B;AAGC,CA7BD","file":"interceptor.service.js","sourcesContent":["'use strict';\n\n(function() {\n\nfunction authInterceptor($rootScope, $q, $cookies, $injector, Util) {\n  var state;\n  return {\n    // Add authorization token to headers\n    request(config) {\n      config.headers = config.headers || {};\n      if ($cookies.get('token') && Util.isSameOrigin(config.url)) {\n        config.headers.Authorization = 'Bearer ' + $cookies.get('token');\n      }\n      return config;\n    },\n\n    // Intercept 401s and redirect you to login\n    responseError(response) {\n      if (response.status === 401) {\n        (state || (state = $injector.get('$state'))).go('main');\n        // remove any stale tokens\n        $cookies.remove('token');\n      }\n      return $q.reject(response);\n    }\n  };\n}\n\nangular.module('chatApp.auth')\n  .factory('authInterceptor', authInterceptor);\n\n})();\n"]}