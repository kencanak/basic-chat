{"version":3,"sources":["../../../client/components/chatRelated/messageConsole.controller.js"],"names":[],"mappings":"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","file":"messageConsole.controller.js","sourcesContent":["'use strict';\n\nclass messageConsoleController {\n  constructor(Auth, $state, socket, Message, User, $scope, $timeout) {\n    this.user = {};\n    this.errors = {};\n    this.submitted = false;\n    this.message = \"\";\n\n    this.socket = socket.socket;\n\n    this.Message = Message;\n    this.User = User;\n    this.Auth = Auth;\n    this.$state = $state;\n    this.$timeout = $timeout;\n\n    this.currentConversation = [];\n    this.conversationMessagesLocal = {};\n    this.currentChatRoomId = null;\n    this.chatDetails = null;\n    this.totalUnread = 0;\n\n    var self = this;\n\n\n    //probably this is the worst idea to reinit the tooltip. need to look for a proper Materialize directive\n\n    $scope.$watch(\n        \"messageConsole.currentConversation\",\n        function handleFooChange( newValue, oldValue ) {\n            setTimeout(function(){\n              $('.tooltipped').tooltip('remove');\n              $('.tooltipped').tooltip();\n            });\n\n        }\n    );\n\n    //check for socket send message broadcast\n    this.socket.on('Send Message', function(param){\n      var msg = {\n        'author': param.author,\n        'content': param.content,\n        'timestamp': new Date()\n      };\n\n      //just need to update local message, this is nasty\n      if (!self.conversationMessagesLocal[param.roomId]){\n          var participants = param.roomId.split('|');\n          var newEntry = {\n            'roomId': param.roomId,\n            'participants': participants,\n            'recipient': _.difference(participants, [self.Auth.getCurrentUser().userName])[0],\n            'conversations': [],\n            'unread': msg.author === self.Auth.getCurrentUser().userName ? false : true\n          }\n          self.conversationMessagesLocal[param.roomId] = newEntry;\n\n          self.currentConversation.push(newEntry);\n      }\n      self.conversationMessagesLocal[param.roomId].unread = msg.author === self.Auth.getCurrentUser().userName ? false : true;\n      self.conversationMessagesLocal[param.roomId].conversations.push(msg);\n\n      // self.chatDetails = self.conversationMessagesLocal[param.roomId];\n\n      // self.loadSelectedConversation(param.roomId);\n\n      //record conversation into database\n      if (msg.author === self.Auth.getCurrentUser().userName){\n        self.Message.recordConversations({\n            roomId: param.roomId, messageAuthor: param.author, messageContent: param.content}).$promise.then(response => {\n          });\n      }\n\n    });\n  }\n\n  getLength(obj) {\n    return Object.keys(obj).length;\n  }\n\n\n  $onInit(){\n    var self = this;\n    this.$timeout(function(){\n      self.getCurrentUserConversations();\n      self.socket.emit(\"test\");\n    }, 100);\n\n  }\n\n  formatDate(date){\n    return moment(date).format('DD-MM-YYYY hh:mm a');\n  }\n\n  loadSelectedConversation(roomId){\n    if (!roomId && this.currentConversation.length > 0){\n      roomId = this.currentConversation[0].roomId;\n    }\n\n    if (this.conversationMessagesLocal[roomId]){\n        this.conversationMessagesLocal[roomId].unread = false;\n    }\n\n    this.currentChatRoomId = roomId;\n    this.chatDetails = this.conversationMessagesLocal[roomId];\n  }\n\n  getCurrentUserConversations(){\n    var self = this;\n    this.Message.get().$promise.then(response => {\n      var massagedData = [];\n      //need to massage the response data, adding in recipient details. nasty\n\n      _(response.data).forEach(function(value) {\n        var recipient = _.difference(value.participants, [self.Auth.getCurrentUser().userName]);\n        value.recipient = recipient[0];\n\n        self.conversationMessagesLocal[value.roomId] = value;\n        massagedData.push(value);\n\n        //need to join each roomId\n        self.socket.emit('Join Rooms', {roomId: value.roomId});\n      });\n\n\n      this.currentConversation = massagedData;\n      this.loadSelectedConversation();\n    });\n  }\n\n  sendMessage(){\n    this.socket.emit('Begin Chat', {content: this.message, author: this.Auth.getCurrentUser().userName, roomId: this.currentChatRoomId, newMessage: true});\n\n    this.message = '';\n  }\n}\n\nangular.module('chatApp')\n  .controller('messageConsoleController', messageConsoleController);\n"]}