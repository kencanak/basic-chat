{"version":3,"sources":["../../../../server/api/user/user.model.spec.js"],"names":[],"mappings":"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","file":"user.model.spec.js","sourcesContent":["'use strict';\n\nimport app from '../..';\nimport User from './user.model';\nvar user;\nvar genUser = function() {\n  user = new User({\n    provider: 'local',\n    name: 'Fake User',\n    email: 'test@example.com',\n    password: 'password'\n  });\n  return user;\n};\n\ndescribe('User Model', function() {\n  before(function() {\n    // Clear users before testing\n    return User.remove();\n  });\n\n  beforeEach(function() {\n    genUser();\n  });\n\n  afterEach(function() {\n    return User.remove();\n  });\n\n  it('should begin with no users', function() {\n    return expect(User.find({}).exec()).to\n      .eventually.have.length(0);\n  });\n\n  it('should fail when saving a duplicate user', function() {\n    return expect(user.save()\n      .then(function() {\n        var userDup = genUser();\n        return userDup.save();\n      })).to.be.rejected;\n  });\n\n  describe('#email', function() {\n    it('should fail when saving with a blank email', function() {\n      user.email = '';\n      return expect(user.save()).to.be.rejected;\n    });\n\n    it('should fail when saving with a null email', function() {\n      user.email = null;\n      return expect(user.save()).to.be.rejected;\n    });\n\n    it('should fail when saving without an email', function() {\n      user.email = undefined;\n      return expect(user.save()).to.be.rejected;\n    });\n  });\n\n  describe('#password', function() {\n    it('should fail when saving with a blank password', function() {\n      user.password = '';\n      return expect(user.save()).to.be.rejected;\n    });\n\n    it('should fail when saving with a null password', function() {\n      user.password = null;\n      return expect(user.save()).to.be.rejected;\n    });\n\n    it('should fail when saving without a password', function() {\n      user.password = undefined;\n      return expect(user.save()).to.be.rejected;\n    });\n\n    describe('given the user has been previously saved', function() {\n      beforeEach(function() {\n        return user.save();\n      });\n\n      it('should authenticate user if valid', function() {\n        expect(user.authenticate('password')).to.be.true;\n      });\n\n      it('should not authenticate user if invalid', function() {\n        expect(user.authenticate('blah')).to.not.be.true;\n      });\n\n      it('should remain the same hash unless the password is updated', function() {\n        user.name = 'Test User';\n        return expect(user.save()\n          .then(function(u) {\n            return u.authenticate('password');\n          })).to.eventually.be.true;\n      });\n    });\n  });\n\n});\n"]}