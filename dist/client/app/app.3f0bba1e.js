"use strict";function _classCallCheck(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}function _classCallCheck(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}function _classCallCheck(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}function _classCallCheck(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}function _classCallCheck(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}function _classCallCheck(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}function _classCallCheck(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}function _classCallCheck(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}angular.module("chatApp",["chatApp.auth","chatApp.admin","chatApp.constants","ngCookies","ngResource","ngSanitize","btford.socket-io","ui.router","validation.match","ngAnimate"]).config(["$urlRouterProvider","$locationProvider",function(a,b){a.otherwise("/"),b.html5Mode(!0)}]),angular.module("chatApp.auth",["chatApp.constants","chatApp.util","ngCookies","ui.router"]).config(["$httpProvider",function(a){a.interceptors.push("authInterceptor")}]),angular.module("chatApp.admin",["chatApp.auth","ui.router"]),angular.module("chatApp.util",[]);var _createClass=function(){function a(a,b){for(var c=0;c<b.length;c++){var d=b[c];d.enumerable=d.enumerable||!1,d.configurable=!0,"value"in d&&(d.writable=!0),Object.defineProperty(a,d.key,d)}}return function(b,c,d){return c&&a(b.prototype,c),d&&a(b,d),b}}(),ContactsListController=function(){function a(b,c,d,e,f,g,h){_classCallCheck(this,a),this.$http=e,this.User=d,this.Message=h,this.socket=g.socket,this.$scope=f,this.Auth=b,this.isLoggedIn=b.isLoggedIn,this.getCurrentUser=b.getCurrentUser,this.$state=c,this.keyword="",this.searchRes=[],this.searchResTotal=0,this.totalPages=0,this.range=_.range,this.currentPage=1,this.contacts=[],this.currentUserContacts=this.getCurrentUser().contacts,f.$watch("contactsList.searchRes",function(a,b){setTimeout(function(){$(".tooltipped").tooltip("remove"),$(".tooltipped").tooltip()})}),f.$watch("contactsList.contacts",function(a,b){setTimeout(function(){$(".tooltipped").tooltip("remove"),$(".tooltipped").tooltip()})})}return a.$inject=["Auth","$state","User","$http","$scope","socket","Message"],_createClass(a,[{key:"$onInit",value:function(){$(".modal-trigger").leanModal({dismissible:!1}),$(".tooltipped").tooltip(),this.getContactsList()}},{key:"getLength",value:function(a){return Object.keys(a).length}},{key:"getContactsList",value:function(){var a=this;this.contacts=[],this.currentUserContacts&&this.currentUserContacts.length>0&&this.User.contactsListDetails({contacts:this.currentUserContacts}).$promise.then(function(b){a.contacts=b.data})}},{key:"searchContacts",value:function(){var a=this;this.keyword&&this.User.findUserByUserName({keyword:this.keyword,page:this.currentPage}).$promise.then(function(b){a.searchResTotal=Number(b.total),a.totalPages=Math.ceil(a.searchResTotal/5),a.searchRes=b.data})}},{key:"changePage",value:function(a){return 1>a||a>this.totalPages?!1:(this.currentPage=a,void this.searchContacts())}},{key:"addContacts",value:function(a){var b=this,c=this.currentUserContacts;return c.indexOf(a)>-1?!1:void this.User.addContactsList({id:this.getCurrentUser()._id,contact:a}).$promise.then(function(a){b.grabLatestContactsList();var c=$("<span>Contact added successfully</span>");Materialize.toast(c,5e3)})}},{key:"deleteContacts",value:function(a){var b=this,c=this.currentUserContacts,d=c.indexOf(a);return-1===d?!1:void this.User.deleteContactsList({id:this.getCurrentUser()._id,contact:a}).$promise.then(function(a){b.grabLatestContactsList();var c=$("<span>Contact deleted successfully</span>");Materialize.toast(c,5e3)})}},{key:"grabLatestContactsList",value:function(){var a=this;this.socket.emit("Update Contacts"),this.User.get().$promise.then(function(b){a.currentUserContacts=b.contacts,a.getContactsList()})}},{key:"beginConversation",value:function(a){var b=this;$("ul.tabs").tabs("select_tab","chats"),this.Message.getPrivateRoomIdByParticipant({recipient:a}).$promise.then(function(c){var d=b.Auth.getCurrentUser().userName+"|"+a;c.data&&c.data.roomId&&(d=c.data.roomId),b.socket.emit("Begin Chat",{content:"Hi",author:b.Auth.getCurrentUser().userName,roomId:d,newMessage:!0})})}}]),a}();angular.module("chatApp").controller("ContactsListController",ContactsListController),angular.module("chatApp").config(["$stateProvider",function(a){a.state("logout",{url:"/logout?referrer",referrer:"main",template:"",controller:["$state","Auth","socket",function(a,b,c){var d=a.params.referrer||a.current.referrer||"main";c.socket.disconnect(),b.logout(),a.go(d)}]}).state("chatRoom",{url:"/chatRoom",templateUrl:"app/chatRoom/chatRoom.html",controller:"ChatRoomController",controllerAs:"chatRoom",authenticate:!0})}]).run(["$rootScope",function(a){a.$on("$stateChangeStart",function(a,b,c,d){"logout"===b.name&&d&&d.name&&!d.authenticate&&(b.referrer=d.name)})}]);var _createClass=function(){function a(a,b){for(var c=0;c<b.length;c++){var d=b[c];d.enumerable=d.enumerable||!1,d.configurable=!0,"value"in d&&(d.writable=!0),Object.defineProperty(a,d.key,d)}}return function(b,c,d){return c&&a(b.prototype,c),d&&a(b,d),b}}();!function(){var a=function(){function a(b,c,d,e){_classCallCheck(this,a),this.Auth=b,this.isLoggedIn=b.isLoggedIn,this.getCurrentUser=b.getCurrentUser,this.userStatus=this.getCurrentUser().status,this.User=d,this.user={},this.errors=null,this.socket=e.socket,this.currentUserContacts=this.getCurrentUser().contacts,this.newMessage=!1;var f=this;$("ul.tabs").tabs(),$(".button-collapse").sideNav({closeOnClick:!0}),$(".modal-trigger").leanModal({dismissible:!1}),this.socket.on("New Message",function(a){f.newMessage=a.author!==f.getCurrentUser().userName}),this.socket.on("User Online",function(a){if(f.currentUserContacts&&f.currentUserContacts.indexOf(a)>-1){var b=$("<span>"+a+" is online</span>");Materialize.toast(b,5e3)}}),this.socket.on("Update Contacts",function(){f.grabLatestContactsList()})}return a.$inject=["Auth","$scope","User","socket"],_createClass(a,[{key:"grabLatestContactsList",value:function(){var a=this;this.User.get().$promise.then(function(b){console.log(b.contacts),a.currentUserContacts=b.contacts})}},{key:"changePassword",value:function(a){var b=this;this.errors="",a.$valid&&this.Auth.changePassword(this.user.oldPassword,this.user.newPassword).then(function(){$("#changePasswordModal").closeModal();var a=$("<span>Password changed successfully</span>");Materialize.toast(a,5e3)})["catch"](function(){b.errors="Incorrect password"})}},{key:"updateStatus",value:function(){this.User.updateStatus({id:this.getCurrentUser()._id,status:this.userStatus.trim()}).$promise.then(function(a){var b=$("<span>Status updated successfully</span>");Materialize.toast(b,5e3)})}}]),a}();angular.module("chatApp").controller("ChatRoomController",a)}(),function(){var a=function b(a,c){_classCallCheck(this,b),c.logout(),$(".lean-overlay").hide()};a.$inject=["$scope","Auth"],angular.module("chatApp").component("main",{templateUrl:"app/main/main.html",controller:a})}(),angular.module("chatApp").config(["$stateProvider",function(a){a.state("main",{url:"/",template:"<main></main>"})}]);var _createClass=function(){function a(a,b){for(var c=0;c<b.length;c++){var d=b[c];d.enumerable=d.enumerable||!1,d.configurable=!0,"value"in d&&(d.writable=!0),Object.defineProperty(a,d.key,d)}}return function(b,c,d){return c&&a(b.prototype,c),d&&a(b,d),b}}();!function(){var a=function(){function a(b){_classCallCheck(this,a),this.users=b.query()}return a.$inject=["User"],_createClass(a,[{key:"delete",value:function(a){a.$remove(),this.users.splice(this.users.indexOf(a),1)}}]),a}();angular.module("chatApp.admin").controller("AdminController",a)}(),function(){function a(a,b,c,d,e,f,g){var h=f.safeCb,i={},j=e.userRoles||[];c.get("token")&&"/logout"!==a.path()&&(i=g.get());var k={login:function(a,e){var f=a.userName,j=a.password;return b.post("/auth/local",{userName:f,password:j}).then(function(a){return c.put("token",a.data.token),i=g.get(),i.$promise}).then(function(a){return h(e)(null,a),a})["catch"](function(a){return k.logout(),h(e)(a.data),d.reject(a.data)})},logout:function(){c.remove("token"),i={}},createUser:function(a,b){return g.save(a,function(d){return c.put("token",d.token),i=g.get(),h(b)(null,a)},function(a){return k.logout(),h(b)(a)}).$promise},changePassword:function(a,b,c){return g.changePassword({id:i._id},{oldPassword:a,newPassword:b},function(){return h(c)(null)},function(a){return h(c)(a)}).$promise},getCurrentUser:function(a){if(0===arguments.length)return i;var b=i.hasOwnProperty("$promise")?i.$promise:i;return d.when(b).then(function(b){return h(a)(b),b},function(){return h(a)({}),{}})},isLoggedIn:function(a){return 0===arguments.length?i.hasOwnProperty("role"):k.getCurrentUser(null).then(function(b){var c=b.hasOwnProperty("role");return h(a)(c),c})},hasRole:function l(a,b){var l=function(a,b){return j.indexOf(a)>=j.indexOf(b)};return arguments.length<2?l(i.role,a):k.getCurrentUser(null).then(function(c){var d=c.hasOwnProperty("role")?l(c.role,a):!1;return h(b)(d),d})},isAdmin:function(){return k.hasRole.apply(k,[].concat.apply(["admin"],arguments))},getToken:function(){return c.get("token")}};return k}a.$inject=["$location","$http","$cookies","$q","appConfig","Util","User"],angular.module("chatApp.auth").factory("Auth",a)}(),function(){function a(a,b,c,d,e){var f;return{request:function(a){return a.headers=a.headers||{},c.get("token")&&e.isSameOrigin(a.url)&&(a.headers.Authorization="Bearer "+c.get("token")),a},responseError:function(a){return 401===a.status&&((f||(f=d.get("$state"))).go("main"),c.remove("token")),b.reject(a)}}}a.$inject=["$rootScope","$q","$cookies","$injector","Util"],angular.module("chatApp.auth").factory("authInterceptor",a)}(),function(){function a(a){return a("/api/messages/:id/:controller",{id:"@_id"},{getCurrentUserConversations:{method:"GET",url:"/"},getPrivateRoomIdByParticipant:{method:"POST",params:{recipient:"@recipient"},url:"/api/messages/getPrivateRoomIdByParticipant/:recipient"},recordConversations:{method:"POST",params:{roomId:"@roomId",messageAuthor:"@messageAuthor",messageContent:"@messageContent"},url:"/api/messages/recordConversations/:roomId/:messageAuthor/:messageContent"}})}a.$inject=["$resource"],angular.module("chatApp.auth").factory("Message",a)}(),function(){angular.module("chatApp.auth").run(["$rootScope","$state","Auth",function(a,b,c){a.$on("$stateChangeStart",function(a,d){d.authenticate&&("string"==typeof d.authenticate?c.hasRole(d.authenticate,_.noop).then(function(d){return d?void 0:(a.preventDefault(),c.isLoggedIn(_.noop).then(function(a){b.go(a?"chatRoom":"main")}))}):c.isLoggedIn(_.noop).then(function(c){c||(a.preventDefault(),b.go("main"))}))})}])}(),function(){function a(a){return a("/api/users/:id/:controller",{id:"@_id"},{changePassword:{method:"PUT",params:{controller:"password"}},get:{method:"GET",params:{id:"me"}},contactsListDetails:{method:"POST",params:{contacts:"@contacts"},url:"/api/users/contactsListDetails/:contacts"},findUserByUserName:{method:"POST",params:{keyword:"@keyword",page:"@page"},url:"/api/users/findUserByUserName/:keyword/:page"},addContactsList:{method:"POST",params:{contact:"@contact",id:"@id"},url:"/api/users/addContactsList/:id/:contact"},deleteContactsList:{method:"POST",params:{contact:"@contact",id:"@id"},url:"/api/users/deleteContactsList/:id/:contact"},updateStatus:{method:"POST",params:{status:"@status",id:"@id"},url:"/api/users/updateStatus/:id/:status"}})}a.$inject=["$resource"],angular.module("chatApp.auth").factory("User",a)}(),angular.module("chatApp.admin").config(["$stateProvider",function(a){a.state("admin",{url:"/admin",templateUrl:"app/admin/admin.html",controller:"AdminController",controllerAs:"admin",authenticate:"admin"})}]),angular.module("chatApp").directive("contactsList",function(){return{templateUrl:"components/chatRelated/contactsList.html",restrict:"E",controller:"ContactsListController",controllerAs:"contactsList"}});var _createClass=function(){function a(a,b){for(var c=0;c<b.length;c++){var d=b[c];d.enumerable=d.enumerable||!1,d.configurable=!0,"value"in d&&(d.writable=!0),Object.defineProperty(a,d.key,d)}}return function(b,c,d){return c&&a(b.prototype,c),d&&a(b,d),b}}(),messageConsoleController=function(){function a(b,c,d,e,f,g,h){_classCallCheck(this,a),this.user={},this.errors={},this.submitted=!1,this.message="",this.socket=d.socket,this.Message=e,this.User=f,this.Auth=b,this.$state=c,this.$timeout=h,this.currentConversation=[],this.conversationMessagesLocal={},this.currentChatRoomId=null,this.chatDetails=null,this.totalUnread=0;var i=this;g.$watch("messageConsole.currentConversation",function(a,b){setTimeout(function(){$(".tooltipped").tooltip("remove"),$(".tooltipped").tooltip()})}),this.socket.on("Send Message",function(a){var b={author:a.author,content:a.content,timestamp:new Date};if(!i.conversationMessagesLocal[a.roomId]){var c=a.roomId.split("|"),d={roomId:a.roomId,participants:c,recipient:_.difference(c,[i.Auth.getCurrentUser().userName])[0],conversations:[],unread:b.author!==i.Auth.getCurrentUser().userName};i.conversationMessagesLocal[a.roomId]=d,i.currentConversation.push(d)}i.conversationMessagesLocal[a.roomId].unread=b.author!==i.Auth.getCurrentUser().userName,i.conversationMessagesLocal[a.roomId].conversations.push(b),b.author===i.Auth.getCurrentUser().userName&&i.Message.recordConversations({roomId:a.roomId,messageAuthor:a.author,messageContent:a.content}).$promise.then(function(a){})})}return a.$inject=["Auth","$state","socket","Message","User","$scope","$timeout"],_createClass(a,[{key:"getLength",value:function(a){return Object.keys(a).length}},{key:"$onInit",value:function(){var a=this;this.$timeout(function(){a.getCurrentUserConversations(),a.socket.emit("test")},100)}},{key:"formatDate",value:function(a){return moment(a).format("DD-MM-YYYY hh:mm a")}},{key:"loadSelectedConversation",value:function(a){!a&&this.currentConversation.length>0&&(a=this.currentConversation[0].roomId),this.conversationMessagesLocal[a]&&(this.conversationMessagesLocal[a].unread=!1),this.currentChatRoomId=a,this.chatDetails=this.conversationMessagesLocal[a]}},{key:"getCurrentUserConversations",value:function(){var a=this,b=this;this.Message.get().$promise.then(function(c){var d=[];_(c.data).forEach(function(a){var c=_.difference(a.participants,[b.Auth.getCurrentUser().userName]);a.recipient=c[0],b.conversationMessagesLocal[a.roomId]=a,d.push(a),b.socket.emit("Join Rooms",{roomId:a.roomId})}),a.currentConversation=d,a.loadSelectedConversation()})}},{key:"sendMessage",value:function(){this.socket.emit("Begin Chat",{content:this.message,author:this.Auth.getCurrentUser().userName,roomId:this.currentChatRoomId,newMessage:!0}),this.message=""}}]),a}();angular.module("chatApp").controller("messageConsoleController",messageConsoleController),angular.module("chatApp").directive("messageConsole",function(){return{templateUrl:"components/chatRelated/messageConsole.html",restrict:"E",controller:"messageConsoleController",controllerAs:"messageConsole"}}).directive("scrollBottom",function(){return{scope:{scrollBottom:"="},link:function(a,b){a.$watchCollection("scrollBottom",function(a){a&&$(b).scrollTop($(b)[0].scrollHeight)})}}}),angular.module("chatApp").directive("footer",function(){return{templateUrl:"components/footer/footer.html",restrict:"E",link:function(a,b){b.addClass("footer")}}});var _createClass=function(){function a(a,b){for(var c=0;c<b.length;c++){var d=b[c];d.enumerable=d.enumerable||!1,d.configurable=!0,"value"in d&&(d.writable=!0),Object.defineProperty(a,d.key,d)}}return function(b,c,d){return c&&a(b.prototype,c),d&&a(b,d),b}}(),LoginFormController=function(){function a(b,c,d,e){_classCallCheck(this,a),this.user={},this.errors={},this.submitted=!1,this.$timeout=e,this.Auth=b,this.$state=c,this.$rootScope=d}return a.$inject=["Auth","$state","$rootScope","$timeout"],_createClass(a,[{key:"login",value:function(a){var b=this;this.submitted=!0,a.$valid&&this.Auth.login({userName:this.user.userName,password:this.user.password}).then(function(){var a=b;b.$timeout(function(){a.$rootScope.$broadcast("authenticated")},100),b.$state.go("chatRoom")})["catch"](function(a){console.log(a),b.errors.other=a.message})}}]),a}();angular.module("chatApp").controller("LoginFormController",LoginFormController),angular.module("chatApp").directive("loginForm",function(){return{templateUrl:"components/forms/loginForm.html",restrict:"E",controller:"LoginFormController",controllerAs:"loginForm"}});var _createClass=function(){function a(a,b){for(var c=0;c<b.length;c++){var d=b[c];d.enumerable=d.enumerable||!1,d.configurable=!0,"value"in d&&(d.writable=!0),Object.defineProperty(a,d.key,d)}}return function(b,c,d){return c&&a(b.prototype,c),d&&a(b,d),b}}(),SignupFormController=function(){function a(b,c,d,e){_classCallCheck(this,a),this.user={},this.errors={},this.submitted=!1,this.Auth=b,this.$state=c,this.$rootScope=d,this.$timeout=e}return a.$inject=["Auth","$state","$rootScope","$timeout"],_createClass(a,[{key:"register",value:function(a){var b=this;this.submitted=!0,a.$valid&&this.Auth.createUser({name:this.user.name,userName:this.user.userName,password:this.user.password}).then(function(){var a=b;b.$timeout(function(){a.$rootScope.$broadcast("authenticated")},100),b.$state.go("chatRoom")})["catch"](function(c){c=c.data,b.errors={},angular.forEach(c.errors,function(c,d){a[d].$setValidity("mongoose",!1),b.errors[d]=c.message})})}}]),a}();angular.module("chatApp").controller("SignupFormController",SignupFormController),angular.module("chatApp").directive("signupForm",function(){return{templateUrl:"components/forms/signupForm.html",restrict:"E",controller:"SignupFormController",controllerAs:"signupForm"}}),angular.module("chatApp").directive("mongooseError",function(){return{restrict:"A",require:"ngModel",link:function(a,b,c,d){b.on("keydown",function(){return d.$setValidity("mongoose",!0)})}}});var NavbarController=function a(b){_classCallCheck(this,a),this.menu=[{title:"Home",state:"main"}],this.isCollapsed=!0,this.isLoggedIn=b.isLoggedIn,this.isAdmin=b.isAdmin,this.getCurrentUser=b.getCurrentUser};NavbarController.$inject=["Auth"],angular.module("chatApp").controller("NavbarController",NavbarController),angular.module("chatApp").directive("navbar",function(){return{templateUrl:"components/navbar/navbar.html",restrict:"E",controller:"NavbarController",controllerAs:"nav"}}),angular.module("chatApp").factory("socket",["socketFactory","Auth","$rootScope",function(a,b,c){var d=io("",{query:"token="+b.getToken(),path:"/socket.io-client"});c.$on("authenticated",function(){d=io("",{forceNew:!0,query:"token="+b.getToken(),path:"/socket.io-client"})});var e=a({ioSocket:d});return{socket:e,syncUpdates:function(a,b,c){c=c||angular.noop,e.on(a+":save",function(a){var d=_.find(b,{_id:a._id}),e=b.indexOf(d),f="created";d?(b.splice(e,1,a),f="updated"):b.push(a),c(f,a,b)}),e.on(a+":remove",function(a){var d="deleted";_.remove(b,{_id:a._id}),c(d,a,b)})},unsyncUpdates:function(a){e.removeAllListeners(a+":save"),e.removeAllListeners(a+":remove")}}}]),function(a,b){a.module("chatApp.constants",[]).constant("appConfig",{userRoles:["guest","user","admin"]})}(angular),function(){function a(a){var b={safeCb:function(a){return angular.isFunction(a)?a:angular.noop},urlParse:function(a){var b=document.createElement("a");return b.href=a,""===b.host&&(b.href=b.href),b},isSameOrigin:function(c,d){return c=b.urlParse(c),d=d&&[].concat(d)||[],d=d.map(b.urlParse),d.push(a.location),d=d.filter(function(a){return c.hostname===a.hostname&&c.port===a.port&&c.protocol===a.protocol}),d.length>=1}};return b}a.$inject=["$window"],angular.module("chatApp.util").factory("Util",a)}(),angular.module("chatApp").run(["$templateCache",function(a){a.put("app/admin/admin.html",'<div class=container><p>The delete user and user index api routes are restricted to users with the \'admin\' role.</p><ul class="list-group user-list"><li class=list-group-item ng-repeat="user in admin.users"><div class=user-info><strong>{{user.name}}</strong><br><span class=text-muted>{{user.email}}</span></div><a ng-click=admin.delete(user) class=trash><span class="fa fa-trash fa-2x"></span></a></li></ul></div>'),a.put("app/chatRoom/chatRoom.html",'<div class=container><div class=row><nav><div class=nav-wrapper><a href=#! class=brand-logo><span>Bonjour, {{chatRoom.getCurrentUser().name}}</span><br><span class=status>~ {{chatRoom.userStatus ? chatRoom.userStatus : \'no status\'}} ~</span></a> <a href=# data-activates=mobile-demo class=button-collapse><i class=material-icons>menu</i></a><ul class="right hide-on-med-and-down"><li><a class=modal-trigger href=#updateStatusModal>Update Status</a></li><li><a class=modal-trigger href=#changePasswordModal>Change Password</a></li><li><a ui-sref=logout>Logout</a></li></ul><ul class=side-nav id=mobile-demo><li><a class=modal-trigger href=#updateStatusModal>Update Status</a></li><li><a class=modal-trigger href=#changePasswordModal>Change Password</a></li><li><a ui-sref=logout>Logout</a></li></ul></div></nav></div><!-- Update Status Modal Structure --><div id=updateStatusModal class=modal><div class=modal-content><h5>Update Status</h5><div class=row><div class="col s12"><div class=input-field><i class="material-icons prefix">face</i> <input id=search placeholder="How\'s your mood today?" name=search ng-model=chatRoom.userStatus required></div></div></div></div><div class=modal-footer><a href=#! class="modal-action modal-close waves-effect waves-green btn-flat" ng-model=chatRoom.userStatus ng-click=chatRoom.updateStatus()>Save</a> <a href=#! class="modal-action modal-close waves-effect waves-green btn-flat">Cancel</a></div></div><!-- end of Update Status Modal Structure --><!-- Change Password Modal Structure --><div id=changePasswordModal class="modal modal-fixed-footer"><form class=form name=form novalidate><div class=modal-content><h5>Update Status</h5><div class=row><div class="col s12"><div class=input-field><i class="material-icons prefix">vpn_key</i> <input id=icon_password name=oldPassword ng-model=chatRoom.user.oldPassword type=password class=validate required><label for=icon_password>Old password</label></div></div></div><div class=row><div class="col s12"><div class=input-field><i class="material-icons prefix">vpn_key</i> <input id=icon_password name=newPassword ng-model=chatRoom.user.newPassword type=password class=validate required ng-minlength=3><label for=icon_password>New password</label></div></div></div><div class=row><div class="col s12"><div class=input-field><i class="material-icons prefix">vpn_key</i> <input id=icon_password name=confirmPassword ng-model=chatRoom.user.confirmPassword type=password class=validate required ng-minlength=3 match=chatRoom.user.newPassword><label for=icon_password>Confirm new password</label></div></div></div><div class=row><div class="col s12"><p class=note ng-show="(form.newPassword.$error.minlength || form.newPassword.$error.required) && (form.newPassword.$dirty)">Password must be at least 3 characters.</p><p class=note ng-show=form.confirmPassword.$error.match>Passwords must match.</p><p class=note ng-show=chatRoom.errors>{{ chatRoom.errors }}</p></div></div></div><div class=modal-footer><a href=#! class="modal-action waves-effect waves-green btn-flat" ng-model=chatRoom.userStatus ng-click=chatRoom.changePassword(form)>Save</a> <a href=#! class="modal-action modal-close waves-effect waves-green btn-flat">Cancel</a></div></form></div><!-- end of Change Password Modal Structure --><div class=row><div class="col s12"><ul class=tabs><li class="tab col s3"><a class=active href=#contactsList><i class=material-icons>perm_contact_calendar</i> Contacts</a></li><li class="tab col s3"><a href=#chats><i class=material-icons>forum</i> Chats</a> <span class="circle notification" ng-show=chatRoom.newMessage><i class=material-icons>notifications_active</i></span></li></ul></div><div id=contactsList class="col s12"><contacts-list></contacts-list></div><div id=chats class="col s12"><message-console></message-console></div></div></div>'),a.put("app/main/main.html",'<header class=hero-unit id=banner><div class=container><h1>bonjour!</h1><p class=lead>This is just another mediocre chat application</p><i class="material-icons circle chat-logo">chat_bubble_outline</i></div></header><div class=container><div class=row><div class="col s6"><login-form></login-form></div><div class="col s6"><signup-form></signup-form></div></div></div>'),a.put("components/chatRelated/contactsList.html",'<div class="row contactsList"><div class="col s12"><!--search panel--><div class=row><div class="col s12"><a class="btn-floating teal darken-1 add-user modal-trigger tooltipped" href=#addContactModal data-delay=10 data-tooltip="Add Contact" data-position=right><i class=material-icons>person_add</i></a><!-- Modal Structure --><div id=addContactModal class="modal modal-fixed-footer"><div class=modal-content><h5>Add Contact(s)</h5><div class=row><div class="col s12"><div class=input-field><i class="material-icons prefix">search</i> <input id=search name=search ng-model=contactsList.keyword ng-change=contactsList.searchContacts() required></div></div></div><div class=row><div class="col s12 search-res"><table class=striped><thead><tr><th data-field=userName>User Name</th><th data-field=name>Name</th><th data-field=add></th></tr></thead><tbody><tr ng-show="contactsList.getLength(contactsList.searchRes) === 0"><td colspan=3><span class=note>Search not found...</span></td></tr><tr ng-repeat="contact in contactsList.searchRes"><td>{{contact.userName}}</td><td>{{contact.name}}</td><td><a class="btn-floating teal darken-1 add-user tooltipped" data-delay=10 data-tooltip="Add Contact" data-position=right ng-click=contactsList.addContacts(contact.userName) ng-class="contactsList.currentUserContacts.indexOf(contact.userName) > -1\n                       ? \'disabled\': \'\'"><i class=material-icons>person_add</i></a></td></tr></tbody></table></div><div class="row right" ng-show="contactsList.getLength(contactsList.searchRes) > 0"><p class=note>{{contactsList.searchResTotal}} record(s) found...</p></div><div class="row center pagination-container"><ul class=pagination ng-show="contactsList.getLength(contactsList.searchRes) > 0"><li class=waves-effect ng-class="contactsList.currentPage === 1 ? \'disabled\' :\n                   \'\'"><a href=#!><i class=material-icons ng-click="contactsList.changePage(contactsList.currentPage -\n                       1)">chevron_left</i></a></li><li class=waves-effect ng-click=contactsList.changePage(x) ng-class="contactsList.currentPage === x ? \'active\' : \'\'" ng-repeat="x in\n                   contactsList.range(1,contactsList.totalPages + 1)"><a>{{x}}</a></li><li class=waves-effect ng-class="contactsList.currentPage ===\n                   contactsList.totalPages ? \'disabled\' : \'\'" ng-click="contactsList.changePage(contactsList.currentPage + 1)"><a><i class=material-icons>chevron_right</i></a></li></ul></div></div></div><div class=modal-footer><a href=#! class="modal-action modal-close waves-effect waves-green btn-flat">Done</a></div></div></div></div><!--end of search panel--><div ng-show="!contactsList.contacts || contactsList.getLength(contactsList.contacts) === 0"><h6 class=note>Gasp! You have no contacts! Get a life by adding one or two will you?</h6></div><div class=row ng-show="contactsList.contacts && contactsList.getLength(contactsList.contacts) > 0"><ul class="collection col s12"><li class="collection-item avatar" ng-repeat="contact in contactsList.contacts"><span class="circle blue-grey initial">{{contact.userName[0].toUpperCase()}}</span> <span class=title>{{contact.userName}}</span><p>{{contact.name}}<br><span class=status>~ {{contact.status ? contact.status : \'no status\'}} ~</span></p><a href=#! class="secondary-content tooltipped" data-delay=10 data-tooltip="Begin Conversation" data-position=left ng-click=contactsList.beginConversation(contact.userName)><i class=material-icons>chat</i></a> <a href=#! class="third-content tooltipped" data-delay=10 data-tooltip="Delete Contact" data-position=left ng-click=contactsList.deleteContacts(contact.userName)><i class=material-icons>delete_forever</i></a></li></ul></div></div></div>'),a.put("components/chatRelated/messageConsole.html",'<div class=row ng-show="messageConsole.getLength(messageConsole.currentConversation) === 0"><h6 class=note>No active conversations found...</h6></div><div class=row ng-show="messageConsole.getLength(messageConsole.currentConversation) > 0"><div class="col s2"><ul class="collection recent-message-list"><li class="collection-item avatar" ng-repeat="message in messageConsole.currentConversation" ng-click=messageConsole.loadSelectedConversation(message.roomId)><span class="circle blue-grey initial tooltipped" data-delay=10 data-tooltip={{message.recipient}} data-position=right>{{message.recipient[0].toUpperCase()}}</span> <span class="circle new" ng-show=message.unread></span></li></ul></div><div class="col s10"><div class=message-console><div class=message-recipients><p><span class="circle blue-grey initial">{{messageConsole.chatDetails.recipient[0].toUpperCase()}}</span> {{messageConsole.chatDetails.recipient}}</p></div><div class=message-room><div class=message-content-wrapper id=message-content-wrapper scroll-bottom=messageConsole.chatDetails.conversations><div ng-repeat="messageContent in messageConsole.chatDetails.conversations  track by $index" class=message-row ng-class="{{messageContent.author === messageConsole.Auth.getCurrentUser().userName}} ? \'sender-message\' : \'recipient-message\'"><span class="circle blue-grey initial" ng-show="messageContent.author !== messageConsole.Auth.getCurrentUser().userName">{{messageConsole.chatDetails.recipient[0].toUpperCase()}}</span><p class=message-content>{{messageContent.content}}</p><p class=message-content-time>{{messageConsole.formatDate(messageContent.timestamp)}}</p></div></div></div><div class="col s12 message-sender"><div class="col s10"><textarea id=message name=message ng-model=messageConsole.message rows=8 length=1000></textarea></div><div class="col s2"><button class="btn waves-effect waves-light" ng-click=messageConsole.sendMessage()><i class="material-icons center">email</i></button></div></div></div></div></div>'),a.put("components/footer/footer.html",'<div class=container><p>Angular Fullstack v3.6.0 | <a href=https://twitter.com/tyhenkel>@tyhenkel</a> | <a href="https://github.com/DaftMonk/generator-angular-fullstack/issues?state=open">Issues</a></p></div>'),a.put("components/forms/loginForm.html",'<form class="col s12 login-form" name=login ng-submit=loginForm.login(login)><h5>Login</h5><div class=row><div class="input-field col s12"><i class="material-icons prefix">account_circle</i> <input id=icon_userName name=userName class=validate ng-model=loginForm.user.userName required><label for=icon_userName>User Name</label></div></div><div class=row><div class="input-field col s12"><i class="material-icons prefix">vpn_key</i> <input id=icon_password name=password ng-model=loginForm.user.password type=password class=validate required><label for=icon_password>Password</label></div></div><div class=row><div class="input-field col s12"></div></div><div class="row notes"><div class="form-group has-error col s12"><p class=note ng-show="form.userName.$error.required && form.password.$error.required && loginForm.submitted">Please enter your user name and password.</p><p class=note>{{ loginForm.errors.other }}</p></div></div><div class="row right"><button class="btn waves-effect waves-light" type=submit>Login</button></div></form>'),a.put("components/forms/signupForm.html",'<form class="col s12 signup-form" name=signup ng-submit=signupForm.register(signup)><h5>Sign-Up</h5><div class=row><div class="input-field col s12"><i class="material-icons prefix">assignment_ind</i> <input id=icon_prefix name=name ng-model=signupForm.user.name class=validate required><label for=icon_prefix>Name</label></div></div><div class=row><div class="input-field col s12"><i class="material-icons prefix">account_circle</i> <input id=icon_prefix name=userName ng-model=signupForm.user.userName class=validate required><label for=icon_prefix>User Name</label></div></div><div class=row><div class="input-field col s12"><i class="material-icons prefix">vpn_key</i> <input id=icon_password name=password type=password ng-model=signupForm.user.password class=validate required><label for=icon_password>Password</label></div></div><div class="row notes"><div class="form-group has-error col s12"><p class=note ng-show="form.name.$error.required && signupForm.submitted">Please enter valid name</p><p class=note ng-show="form.userName.$error.required && signupForm.submitted">What\'s your user name?</p><p class=note ng-show=signupForm.errors.userName>{{ signupForm.errors.userName }}</p><p class=note ng-show="(form.password.$error.minlength || form.password.$error.required) && signupForm.submitted">Password must be at least 3 characters.</p><p class=note ng-show=form.password.$error.mongoose>{{ signupForm.errors.password }}</p><p class=note>{{ signupForm.errors.other }}</p></div></div><div class="row right"><button class="btn waves-effect waves-light" type=submit name=action>Sign-Up</button></div></form>'),
a.put("components/navbar/navbar.html",'<div class="navbar navbar-default navbar-static-top" ng-controller=NavbarController><div class=container><div class=navbar-header><button class=navbar-toggle type=button ng-click="nav.isCollapsed = !nav.isCollapsed"><span class=sr-only>Toggle navigation</span> <span class=icon-bar></span> <span class=icon-bar></span> <span class=icon-bar></span></button> <a href=/ class=navbar-brand>workspace</a></div><div uib-collapse=nav.isCollapsed class="navbar-collapse collapse" id=navbar-main><ul class="nav navbar-nav"><li ng-repeat="item in nav.menu" ui-sref-active=active><a ui-sref={{item.state}}>{{item.title}}</a></li><li ng-show=nav.isAdmin() ui-sref-active=active><a ui-sref=admin>Admin</a></li></ul><ul class="nav navbar-nav navbar-right"><li ng-hide=nav.isLoggedIn() ui-sref-active=active><a ui-sref=signup>Sign up</a></li><li ng-hide=nav.isLoggedIn() ui-sref-active=active><a ui-sref=login>Login</a></li><li ng-show=nav.isLoggedIn()><p class=navbar-text>Hello {{ nav.getCurrentUser().name }}</p></li><li ng-show=nav.isLoggedIn() ui-sref-active=active><a ui-sref=settings><span class="glyphicon glyphicon-cog"></span></a></li><li ng-show=nav.isLoggedIn()><a ui-sref=logout>Logout</a></li></ul></div></div></div>')}]);